from array import array
from fileinput import filename
from bs4 import BeautifulSoup
import urllib
import re
import json
from textblob import TextBlob # NOT USED
import langid # NOT USED


##### VARIABLE DEBUG #####
KEYWORD_FOUND_DEBUG = True   # used for print keyword found. to understand why a json is extracted
PRINT_ERROR_READY_HTML = False # show what filemy program wasn't able to open

##### COSTANT VARIABLE #####

# words that can charaterize json ClaimReview which I'd like to find
MAIN_KEYWORD = ["Generated by Full Fact Claim Review Schema"]
CLAIM_JSON_KEYWORD = [ "claimReviewed", "itemReviewed", "reviewRating", 'ClaimReview', 'Claim', 'Rating' ]
JSON_KEYWORD = ["script type=\"application/ld+json\""]
LANG_KEYWORD = ["html lang"]

##### GLOBAL VARIABLE #####




##### FUNCTION TO CHECK FOR JSON #####

# give line which contain json file, return a json object
def convert_string_to_json(line):

  # line scheme: [<script ..>{json}</script>]
  
  text1 = line.split(">")
  text2 = text1[1].split("<")

  return json.loads(text2[0])

def check_if_is_claim_review(file):

  # convert dictionary to string to search for keywords
  text = str(file).split(" ")
  
  for t in text:
    for keyword in CLAIM_JSON_KEYWORD:

      if keyword in t:
        return True
  
  return False

# return a json-file clamReviewed
def get_claimReviewed_scheme_in_html_code(file_name):


  html_code = ''
  try:
    html_code = open(file_name,'r',errors="ignore", encoding="UTF-8")
  except:
    if  PRINT_ERROR_READY_HTML == True:
      print("html_check.get_claimReviewed_scheme_in_html_code(file_name) -> error to open: " + str(filename) )
  
  my_json = []

  # take all json_file
  #soup = BeautifulSoup(html_code, features="html5lib")  
  #soup = BeautifulSoup(html_code, "html.parser")
  #soup = BeautifulSoup(html_code)
  soup = BeautifulSoup(html_code, "html.parser")
  json_object = soup.find_all('script', type='application/ld+json')

  # creating array with all json_file 
  for j in json_object:
    json_file = convert_string_to_json( str(j) )
    my_json.append(json_file)

  #language = extract_language(html_code)


  # extract claim_reviewed_json
  for json_file in my_json:

    if check_if_is_claim_review(json_file) == True:
      return json_file#, language

  return []#, language

# Take an array with entry < json_file, language > given by get_claimReviewed_scheme_in_html_code(file_name)
def html_array_print(html_array):

  # r-tuple: < json_list, language >, can be present more than one json!
  for r in html_array:
    json_list = r[0]
    language = r[1]

    if json_list== []:
      print("--- no json found ---")

    else:
      print("\n----- result -----")
      print("language: " + language)

      for j in json_list:
        print("my_json: " + str( type( j ) ) )
        print(j)
    

# return a json file, wrapper of get_claimReviewed_scheme_in_html_code and html_array_print
def get_json(filename_array, print_result = False):

  html_file = []
  for f in filename_array:
    result = get_claimReviewed_scheme_in_html_code(f)
    html_file.append(result)
  
  if print_result == True:
    html_array_print(html_file)
    #print("ok")

  return html_file



'''
result1 = get_claimReviewed_scheme_in_html_code("try_folder_scan\\gasdotto.html")
result2 = get_claimReviewed_scheme_in_html_code("try_folder_scan\\confine_russia_finlandia.html")
result3 = get_claimReviewed_scheme_in_html_code("try_folder_scan\\mucche_latte.html")

result = []
result.append(result1)
result.append(result2)
result.append(result3)

print(result)

#html_array_print(result3)

name_array = ["try_folder_scan\\gasdotto.html", "try_folder_scan\\confine_russia_finlandia.html", "try_folder_scan\\mucche_latte.html"]
#get_json(name_array, True)
'''
